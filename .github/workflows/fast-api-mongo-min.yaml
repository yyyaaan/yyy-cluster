# Yan Pan
name: FastAPI Mongo Min App

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build_and_test:
    runs-on: ubuntu-latest
    env:
      FAST001_MONGO_URL: "mongodb://na:not-needed-for-test@mongo/na"
      FAST001_MONGO_DB_NAME: "db"
      FAST001_USE_MOCK_MONGODB: "yes"

    steps:
    - uses: actions/checkout@v3

    - name: Use Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    
    - name: Install mock db and pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mongomock_motor
        pip install -r ./fast-api-mongo-min/requirements.txt
    
    - name: Lint
      run: |
        flake8 ./fast-api-mongo-min/src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 ./fast-api-mongo-min/src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Unit test
      run: |
        cd ./fast-api-mongo-min/src/
        python -m pytest -s -v --doctest-modules --junitxml=test-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: ./fast-api-mongo-min/src/test-results.xml

    - uses: dorny/test-reporter@v1
      with:
        artifact: test-results
        name: JEST Tests
        path: '*.xml'
        reporter: jest-junit

  push_to_docker_hub:
    runs-on: ubuntu-latest
    environment: 	DockerHubConnected
    needs:
    - build_and_test
    
    steps: 
    - uses: actions/checkout@v3

    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_KEY }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./fast-api-mongo-min
        file: ./fast-api-mongo-min/Dockerfile
        push: true
        tags: "yyyaaan/fastapi001mongo"

