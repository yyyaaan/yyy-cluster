# YYYan
# all docker service use docker repo, and must be built in advance
# restart always to allow delayed startup procedures
# coordinate subpath necessary (index.html, API_URL, HOSTNAME_ROOTPATH, and in command)

version: "local-dev-only"

networks:  # docker-compsoe-stack.yaml
  default:
    name: backbone
    external: true

services:
  ingress: # port=env
    restart: always
    image: nginx:stable-alpine
    depends_on:
      - mongo-express
    volumes:
      - ./nginx/conf.template:/etc/nginx/templates/yyy.conf.template
      - ./nginx/index.html:/usr/share/nginx/html/index.html
    ports:
      - "9001:9001"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=9001
      - HOSTNAME=localhost:9001
      - API_URL=http://fast-apps:8001
      - VUE_URL=http://frontend:80
      - BOT_URL=http://y-bot-y:8998
      - KIBANA_URL=http://kibana:5601
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.ingress.nginx

  mongo: # DEVONLY 27017
    restart: always
    image: mongo
    volumes:
      - ./tmpmntdata/mongo:/data/db 
    env_file:
      - env.env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.infra.mongodb

  mongo-express: # DEVOLNY Expose 8081
    restart: always
    image: mongo-express
    depends_on:
      - mongo
    env_file:
      - env.env
    ports:
      - 8081:8081
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.frontend.mongoexpress

  frontend:
    restart: always
    # image: yyyaaan/yanfivuejs:latest
    build:
      context: ./frontend
    command: ["nginx", "-g", "daemon off;"]
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.frontend.vuejs

  fast-apps: # built image with mounted code
    restart: always
    image: yyyaaan/fastapps:latest # or staging
    volumes:
      - ./tmpmntdata:/mnt/shared
      - ./fast-api-mongo-min/src:/app
      - ../yBotY/src:/app/appbot
    command: "uvicorn main:app --root-path /api --reload --host 0.0.0.0 --port 8001;"  
    depends_on:
      - mongo
    env_file:
    - env.env
    environment:
    - HOSTNAME_ROOTPATH=localhost:9001/api
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.backend.fastapi

  y-bot-y: # DEV ONLY
    restart: always
    build:
      context: ../yBotY
    volumes:
      - ./tmpmntdata:/mnt/shared
      - ../yBotY/src:/app
    command: "uvicorn main:app --root-path /bot --reload --host 0.0.0.0 --port 8998;"  
    env_file:
    - env.env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: yyy.backend.bot

  kibana:
    # index creation: http://localhost:5601/app/management/kibana/dataViews
    image: kibana:8.8.1
    restart: always
    ports:
      - 5601:5601
    volumes: 
      - ./tmpmntdata/kibana:/usr/share/kibana/data
    environment: 
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      SERVER_HOST: "0.0.0.0"
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: true
      # https://www.elastic.co/guide/en/kibana/current/settings.html

  dev-py311-tools: # DEV ONLY
    build:
      context: .
      dockerfile: ./tmpmntdata/dev/dockerfile311
    volumes:
      - ./tmpmntdata/dev/:/mnt/
    command: |
      bash -c "
      pip-compile requirements.in
      tail -f /dev/null
      "
